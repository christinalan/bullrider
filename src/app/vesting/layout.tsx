import Image from "next/image"
import type { Metadata } from "next";
// import localFont from "next/font/local";
import { EB_Garamond } from 'next/font/google'
import "../globals.css";
import background from "../../images/background.png"
import long_sign from "../../images/poster_long.png"

const ebGaramond = EB_Garamond({
  subsets: ['latin'],
  display: 'swap',

})

// const regFont = localFont({
//   src: "../fonts/EBGaramond12-AllSC.ttf",
//   display: "swap"
// })

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`antialiased relative min-h-screen w-full ${ebGaramond.className}`}
      >
        <div className="">
          <div className="absolute top-0 left-0 w-full h-full min-h-screen">
            <Image 
                className="-z-10"
                src={background}
                alt="background image"
                layout="fill"
                objectFit="cover"
                priority
              />
         <div className="absolute top-10 sm:top-0 left-0 w-[430px] h-[825px] sm:w-full sm:h-full flex justify-center items-center">
                <Image 
                  className="z-2 object-fill sm:object-contain"
                  src={long_sign}
                  fill
                  alt="sign background"
                  priority
                />
            </div>

            {/* <div className="absolute top-0 left-0 w-full h-full flex justify-center items-center blur-md">
                <Image 
                  className="-z-1 w-[550px] h-[900px]"
                  src={og_long_tan}
                  alt="tan background"
                  width={500}
                  priority
                />
            </div> */}
          </div>
        </div>
        <div className="z-10">{children}</div>
      </body>
    </html>
  );
}


// ${geistSans.variable} ${geistMono.variable} 
